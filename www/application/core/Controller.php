<?phpabstract class Controller {    public $model;    public $view;    public function __construct(){		//создаем экземпляр класса View        $this->view = new View();    }	//метод очищает строку от ненужных символов и пробелов, так же тегов    public function clean_str($str){		return trim(strip_tags($str));	}	//метод проверяет, содержит ли строка только цифры	public function check_str_is_num($str){		if(strlen($str)>0){			$ar=str_split($str);			$ar1=array(0=>'0',1=>'1',2=>'2',3=>'3',4=>'4',5=>'5',6=>'6',7=>'7',8=>'8',9=>'9');			for($i=0;$i<count($ar);$i++){				for($j=0;$j<=count($ar1);$j++){					if($j==count($ar1)){						return false;					}					if($ar[$i]==$ar1[$j]){						break;					}				}			}			return true;		}else{			return false;		}	}	/*абстрактный метод, который должен быть реализован в любом классе-наследнике,	он будет вызыван, если не указан метод контроллера (по умолчанию)*/    public abstract function action_index();}?>